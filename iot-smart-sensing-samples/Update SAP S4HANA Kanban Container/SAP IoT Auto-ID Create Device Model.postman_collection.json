{
	"info": {
		"_postman_id": "534e8308-499e-44c5-9f80-de9eefe75eb6",
		"name": "SAP IoT Auto-ID Create Device Model",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Step 1: GET OAuth Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var data = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"LoginTokenT1\", \"Bearer \" + data.access_token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "text/plain"
					},
					{
						"key": "Cache-Control",
						"value": "no-cache"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "text"
						},
						{
							"key": "response_type",
							"value": "token",
							"type": "text"
						},
						{
							"key": "client_id",
							"value": "{{client_id}}",
							"type": "text"
						},
						{
							"key": "client_secret",
							"value": "{{client_secret}}",
							"type": "text"
						}
					],
					"options": {
						"raw": {
							"language": "text"
						}
					}
				},
				"url": {
					"raw": "https://{{tenant_name}}.{{uaadomain}}/oauth/token",
					"protocol": "https",
					"host": [
						"{{tenant_name}}",
						"{{uaadomain}}"
					],
					"path": [
						"oauth",
						"token"
					]
				}
			},
			"response": []
		},
		{
			"name": "Step 2.1: Create Capability",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var data = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"CapabilityId\", data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{LoginTokenT1}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"epcis_data\",\n    \"alternateId\": \"epcis_data\",\n    \"properties\": [\n        {\n            \"name\": \"eventxml\",\n            \"dataType\": \"string\",\n            \"unitOfMeasure\": \"<none>\"\n        }\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{deviceService}}/api/v1/capabilities",
					"protocol": "https",
					"host": [
						"{{deviceService}}"
					],
					"path": [
						"api",
						"v1",
						"capabilities"
					]
				}
			},
			"response": []
		},
		{
			"name": "Step 2.2: Create Sensor Type",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var data = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"SensorTypeId\", data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{LoginTokenT1}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"capabilities\": [\n        {\n            \"id\": \"{{CapabilityId}}\",\n            \"type\": \"measure\"\n        }\n    ],\n    \"name\": \"epcis_sensortype\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{deviceService}}/api/v1/sensorTypes",
					"protocol": "https",
					"host": [
						"{{deviceService}}"
					],
					"path": [
						"api",
						"v1",
						"sensorTypes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Step 2.3 Create Device",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var data = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"DeviceId\", data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{LoginTokenT1}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"alternateId\": \"epcis_scanner\",\n  \"gatewayId\": \"2\",\n  \"name\": \"epcis_scanner\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{deviceService}}/api/v1/devices/",
					"protocol": "https",
					"host": [
						"{{deviceService}}"
					],
					"path": [
						"api",
						"v1",
						"devices",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Step 2.4 Create Sensor",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var data = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"SensorId\", data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{LoginTokenT1}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"alternateId\" : \"epcis_sensor\",\n  \"deviceId\": \"{{DeviceId}}\",\n  \"name\": \"epcis_sensor\",\n  \"sensorTypeId\": \"{{SensorTypeId}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{deviceService}}/api/v1/sensors",
					"protocol": "https",
					"host": [
						"{{deviceService}}"
					],
					"path": [
						"api",
						"v1",
						"sensors"
					]
				}
			},
			"response": []
		},
		{
			"name": "Step 2.5 GET Device Certificate",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{LoginTokenT1}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{deviceService}}/api/v1/devices/{{DeviceId}}/authentications/clientCertificate/pem",
					"protocol": "https",
					"host": [
						"{{deviceService}}"
					],
					"path": [
						"api",
						"v1",
						"devices",
						"{{DeviceId}}",
						"authentications",
						"clientCertificate",
						"pem"
					]
				}
			},
			"response": []
		}
	]
}
